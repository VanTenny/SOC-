import numpy as np
import pandas as pd
from tqdm import tqdm 
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import MinMaxScaler

np.random.seed(42)

class Logistic_reg_batch_GD:
    def __init__(self, learnin_rate = 0.01, epochs = 1000, lambda_value = 0, batch_size = None ):
        self.learnin_rate = learnin_rate
        self.epochs = epochs
        self.lambda_value = lambda_value
        self.batch_size = batch_size

    def sigmoid(self, z):
        z = np.array(z)
        return 1 / (1 + np.exp(-z))
    
    def loss_grad(self, X, y, theta):
        m = len(y)                          # setting the no. of trainin examples
        h = self.sigmoid(np.dot(X,theta))   # computing the hypothesis
        J = (-1 / m) * (np.dot(y.T, np.log(h)) + np.dot((1 -y).T, np.log(1-h)))
        
        